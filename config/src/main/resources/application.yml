server:
  context-path: /
  port: 7000


eureka:
  client:
    service-url:
      defaultZone: http://eureka:123456@192.168.198.128:8761/eureka/
    healthcheck:
      enabled: true #开启健康检查(需要spring-boot-starter-actuator依赖)
  instance:
    lease-renewal-interval-in-seconds: 10 #租赁更新时间间隔，默认30，即10秒发送一次心跳
    lease-expiration-duration-in-seconds: 60  #租期到期时间，默认90秒
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ipAddress}:${spring.application.instance_id:${server.port}}


spring:
  application:
    name: config
  profiles:
    active: jdbc
  datasource:
    druid:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://192.168.198.128:3306/test?Unicode=true&characterEncoding=UTF-8&useSSL=false
      username: root
      password: weilus
      initial-size: 10
      min-idle: 10
      max-active: 100
      max-wait: 6000
      min-evictable-idle-time-millis: 300000
      time-between-eviction-runs-millis: 60000
  cloud:
    config:
      failFast: true
      server:
        jdbc:
          sql: SELECT `key`, `value` FROM cloud_properties WHERE application=? AND profile=? AND label=?
  rabbitmq:
    addresses: 192.168.198.128:5672
    username: guest
    password: guest


security:
  user:
    name: config
    password: cf123456

logging:
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%thread]){faint} %clr(%-40.40logger{39}){cyan} %L %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"
  level:
    com.weilus: DEBUG
    com.netflix.discovery: ERROR
    org.springframework: INFO
