debug: false
server:
  port: 8081
eureka:
  client:
    healthcheck:
      enabled: true #必须放在application.yml,开启健康检查(需要spring-boot-starter-actuator依赖)

spring:
  thymeleaf:
    cache: false
  rabbitmq:
    addresses: 192.168.198.128:5672
    username: guest
    password: guest
security:
  basic:
    path: /sayHello,/hiMan
  user:
    name: fadffsedfsf
    password: rrfdaDSFfesnmhf

feign:
  client:
    config:
      feign-service:
        loggerLevel:  HEADERS    #NONE,BASIC,HEADERS,FULL
        connectTimeout: 30000    #连接超时
        readTimeout:  10000      #响应超时
        requestInterceptors:
          - com.weilus.commons.feign.interceptors.AuthFeignServiceInterceptor  #访问的账号密码
          - com.weilus.commons.feign.interceptors.DebugRequestInterceptor      #传递DEBUG参数到下一个服务
hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: SEMAPHORE #信号量隔离模式

#feign-service:
#  ribbon:
#    NFLoadBalancerRuleClassName: com.weilus.commons.ribbon.rules.DebugRibbonRule # DEBUG 优先策略

logging:
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%thread]){faint} %clr(%-40.40logger{39}){cyan} %L %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"
  level:
    root: INFO
    com.weilus: DEBUG
    org.springframework.jdbc: DEBUG

management:
  security:
    enabled: false
  health:
    redis:
      enabled: true
    rabbit:
      enabled: false
    db:
      enabled: false

