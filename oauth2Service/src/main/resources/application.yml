debug: false
server:
  port: 8080
security:
  filter-order: 6
  oauth2:
    authorization:
      check-token-access: permitAll()
    resource:
      filter-order: 100


spring:
  thymeleaf:
    cache: false

github:
  client:
    clientId:
    clientSecret:
    accessTokenUri: https://github.com/login/oauth/access_token
    userAuthorizationUri: https://github.com/login/oauth/authorize
    clientAuthenticationScheme: form
  resource:
    userInfoUri: https://api.github.com/user
facebook:
    client:
      clientId:
      clientSecret:
      accessTokenUri: https://graph.facebook.com/oauth/access_token
      userAuthorizationUri: https://www.facebook.com/dialog/oauth
      tokenName: oauth_token
      authenticationScheme: query
      clientAuthenticationScheme: form
    resource:
      userInfoUri: https://graph.facebook.com/me

mybatis:
  typeAliasesPackage: com.weilus.dto,com.weilus.entity
  mapperLocations: classpath*:mybatis/*Mapper.xml
  configuration:
    map-underscore-to-camel-case: true

logging:
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%thread]){faint} %clr(%-40.40logger{39}){cyan} %L %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"
  level:
    com.weilus: DEBUG
    com.netflix.discovery: ERROR
    org.springframework: INFO
    org.springframework.security: DEBUG
    org.apache.ibatis: INFO