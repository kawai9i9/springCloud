server:
  port: 8082

eureka:
  client:
    healthcheck:
      enabled: true #必须放在application.yml,开启健康检查(需要spring-boot-starter-actuator依赖)

#serviceProducer: #微服务serviceProducer 负载均衡策略(灰度发布策略)
#  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.ZoneAvoidanceRule
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule
#    NFLoadBalancerRuleClassName: com.weilus.serviceCustomer.GrayRibbonRule


feign:
  hystrix:
    enabled: false
#hystrix:
#  command:
#    default:
#      execution:
#        isolation:
#          strategy: SEMAPHORE #信号量隔离模式



logging:
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%thread]){faint} %clr(%-40.40logger{39}){cyan} %L %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"
  level:
    com.weilus: DEBUG
    com.netflix.discovery: ERROR
    org.springframework.security: INFO
